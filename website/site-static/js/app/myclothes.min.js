/*! myclothes - v0.0.1 - 2014-05-15 copyright by Sascha HÃ¤usler <saeschdivara@gmail.com> */ 
(function() {
    var __bind = function(fn, me) {
        return function() {
            return fn.apply(me, arguments);
        };
    };
    window.clothingApp = angular.module("clothing-app", [ "ngCookies", "ngResource" ]).config(function($interpolateProvider) {
        return $interpolateProvider.startSymbol("{$"), $interpolateProvider.endSymbol("$}");
    }).run(function($http, $cookies) {
        return $http.defaults.headers.common["X-Requested-With"] = "XMLHttpRequest", $http.defaults.headers.post["X-CSRFToken"] = $cookies.csrftoken, 
        $http.defaults.xsrfCookieName = "csrftoken", $http.defaults.xsrfHeaderName = "X-CSRFToken";
    }), clothingApp.controller("BodyController", [ "$scope", "BodyPartResource", function($scope, BodyPartResource) {
        var $controller, BodyController;
        return BodyController = function() {
            function BodyController() {
                this.$onClothingChosen = __bind(this.$onClothingChosen, this), this.head = "", this.upper_body_part = "", 
                this.lower_body_part = "", this.left_arm = "", this.right_arm = "", this.left_leg = "", 
                this.right_leg = "", BodyPartResource.query().$promise.then(function(_this) {
                    return function(result) {
                        return _this.all_parts = result;
                    };
                }(this));
            }
            return BodyController.prototype.$onClothingChosen = function(event, message) {
                var body_part_id, body_part_name, body_part_object, clothing, part, _i, _len, _ref;
                for (clothing = message.clothing, body_part_id = clothing.body_parts[0], body_part_object = null, 
                _ref = this.all_parts, _i = 0, _len = _ref.length; _len > _i; _i++) if (part = _ref[_i], 
                part.id === body_part_id) {
                    body_part_object = part;
                    break;
                }
                return part ? (body_part_name = part.name.toLowerCase().replace(/[ ]/, "_"), this[body_part_name] = clothing.image, 
                console.log(this)) : void 0;
            }, BodyController;
        }(), $scope.foo = "dddd", $controller = new BodyController(), $scope.$on("CLOTHING_IS_CHOSEN", $controller.$onClothingChosen), 
        $controller;
    } ]), clothingApp.factory("clothingTimeManager", [ "$http", "$q", "ClothingTimeFactory", function($http, $q, ClothingTimeFactory) {
        var clothingTimeManager;
        return clothingTimeManager = {
            test: 2,
            loadAll: function() {
                var deferred;
                return deferred = $q.defer(), $http.get("/api/clothing-time/").success(function(list) {
                    var clothingTime, time, times, _i, _len;
                    for (times = [], _i = 0, _len = list.length; _len > _i; _i++) clothingTime = list[_i], 
                    time = ClothingTimeFactory.$new(), time.setData(clothingTime), times.push(time);
                    return deferred.resolve(times);
                }).error(function() {
                    return deferred.reject();
                }), deferred.promise;
            }
        };
    } ]), clothingApp.controller("ClothingTimeController", [ "$scope", "$rootScope", "clothingTimeManager", function($scope, $rootScope, clothingTimeManager) {
        var $controller, ClothingTimeController;
        return clothingTimeManager.loadAll().then(function() {
            return function(clothingtimeList) {
                return $scope.clothingtimes = clothingtimeList;
            };
        }(this)), ClothingTimeController = function() {
            function ClothingTimeController() {}
            return ClothingTimeController.prototype.$onClothingChosen = function(clothing) {
                return $rootScope.$broadcast("CLOTHING_IS_CHOSEN", {
                    clothing: clothing
                });
            }, ClothingTimeController;
        }(), $controller = new ClothingTimeController(), $scope.onClothingChosen = $controller.$onClothingChosen, 
        $controller;
    } ]);
}).call(this), function() {
    clothingApp.factory("BodyPartResource", [ "$resource", function($resource) {
        return $resource("/api/body/:id/", {
            id: "@id"
        }, {
            stripTrailingSlashes: !1
        });
    } ]), clothingApp.factory("ClothingResource", [ "$resource", function($resource) {
        return $resource("/api/clothing/:id/", {
            id: "@id"
        }, {
            stripTrailingSlashes: !1
        });
    } ]), clothingApp.factory("ClothingTimeFactory", [ "ClothingResource", function(ClothingResource) {
        var ClothingTime, ClothingTimeFactory;
        return ClothingTime = function() {
            function ClothingTime(isVisible) {
                this.isVisible = null != isVisible ? isVisible : !1;
            }
            return ClothingTime.prototype.setData = function(obj) {
                var clothing_id, clothing_obj, _i, _len, _ref, _results;
                for (this.name = obj.name, this.slug = obj.slug, this.image = obj.image, this.clothes = [], 
                _ref = obj.clothes, _results = [], _i = 0, _len = _ref.length; _len > _i; _i++) clothing_id = _ref[_i], 
                clothing_obj = ClothingResource.get({
                    id: clothing_id
                }), _results.push(clothing_obj.$promise.then(function(_this) {
                    return function(data) {
                        return _this.clothes.push(data);
                    };
                }(this)));
                return _results;
            }, ClothingTime.prototype.setVisible = function(isVisible) {
                return this.isVisible = isVisible;
            }, ClothingTime;
        }(), ClothingTimeFactory = {
            $new: function() {
                return new ClothingTime();
            }
        };
    } ]);
}.call(this);